<<<<<<< HEAD
第一节：
=======
﻿第一节：
>>>>>>> 更新笔记

事件：用户操作
onclick	点击时
onmouseover	鼠标滑过
onmouseout	鼠标移出

id不能直接拿着用  必须用geiElementById(获取元素方法)

--------------------------------------------------------------------------------------------------------------------------

重用：

--------------------------------------------------------------------------------------------------------------------------

function 函数名() {	//定义
	demo;
}

函数名();	//调用

--------------------------------------------------------------------------------------------------------------------------

任何标签都可以加ID，包括Link
任何标签的任何属性，都可以修改
HTML怎么写，JS就怎么写	(class例外，在JS里是className)

--------------------------------------------------------------------------------------------------------------------------

在JS里边   .能做的事  []也能做
[]什么时候用呢？  要修改的属性不固定

--------------------------------------------------------------------------------------------------------------------------

字面量(常量)：看到东西，自然知道是什么
变量

--------------------------------------------------------------------------------------------------------------------------

1.style加样式		行间
2.style取样式		行间

样式优先级
*<标签<class<ID<行间

style与className
元素.style.属性=xxx 是修改行间样式
之后再修改className不会有效果

经验：要么就都修改style  要么就都修改className，不要混着来


#######################################################################################################################
第二节：

提取行间事件

事件接收函数

第一种
function 名字()
{
	....
}

oBtn.onclick=名字


第二种	不用取名字
oBtn.onclick=function ()	//匿名函数
{
	...
}

--------------------------------------------------------------------------------------------------------------------------

windows.onload		页面加载完成的时候发生

行为、样式、结构三者分离
JS		CSS		HTML		说白了别加行间样式

--------------------------------------------------------------------------------------------------------------------------

获取一组元素
getElementsByTagName

数组

--------------------------------------------------------------------------------------------------------------------------

this：当前发生事件的元素

自定义属性：HTML加进去的自定义属性 浏览器是不认的，而通过JS加的自定义属性是可以的


--------------------------------------------------------------------------------------------------------------------------

innerHTML	获取HTML标签之内的内容


#######################################################################################################################
第三节：
ECMAScript：翻译		核心
(解释器)

DOM：Document Object Model	HTML		document
	 操作HTML的能力

BOM：Browser Object Model	浏览器		window

兼容性
ECMA		几乎没有兼容性问题
DOM			有一些操作不兼容
BOM			没有兼容问题(完全不兼容)

--------------------------------------------------------------------------------------------------------------------------

常见类型
undefined	//1.真的没定义	2.没赋值

类型转换：

1.强制类型转化
字符串转整数	parseInt
工作原理：从左到右 找数字	如果遇到非数字  则跳出转换  只提取出非数字之前的数字

NaN 	Not a Number	//非数字

isNaN:判断是否是NaN

2.隐式类型转换
==		先转换类型，然后比较
===		不转换类型，直接比较

--------------------------------------------------------------------------------------------------------------------------

作用域：全局变量   局部变量

闭包：子函数可以使用父函数的局部变量

--------------------------------------------------------------------------------------------------------------------------

匈牙利命名法：
	类型前缀
	首字母大写

--------------------------------------------------------------------------------------------------------------------------

break		中断
countinue	继续

什么是真什么是假
	真：true、非0数、非空字符串、非空对象
	假：false、数字0、空字符串、空对象、undefined

--------------------------------------------------------------------------------------------------------------------------

json

json和数组区别：

json下标是字符串
数组下标是个数字

循环：for in

数组：for 0 - length
json：for in

#######################################################################################################################
第四节：

arguments	可变参		不定参
相当于是个数组	传给这个函数的所有参数自动存放到arguments里


--------------------------------------------------------------------------------------------------------------------------

css(oDiv,'width')	获取样式
css(oDiv,'width','200px')	设置样式

--------------------------------------------------------------------------------------------------------------------------

获取非行间样式

currentStyle		//只兼容IE
alert(oDiv.currentStyle.width);

getComputedStyle	//不兼容IE
alert(getComputedStyle(oDiv, false).width);			第二个值随意填



符合样式：background、border
单一样式：width、height

--------------------------------------------------------------------------------------------------------------------------

数组

push	尾部添加
pop		尾部删除

unshift	头部添加
shift	头部删除

splice

concat	链接两个数组

join	修改连接符

sort	数组排序


#######################################################################################################################
第五节：

定时器：
setInterval		无限执行
setTimeout		只执行一次

关闭定时器：
clearInterval
clearTimeout

--------------------------------------------------------------------------------------------------------------------------

charAt和[]方法一样

[]低版本不兼容

--------------------------------------------------------------------------------------------------------------------------

Date	获取时间


--------------------------------------------------------------------------------------------------------------------------

offsetLeft/offsetTop

#######################################################################################################################
第六节：


DOM		document

IE	10%
chrome	60%
FF	90%

父子节点

childNodes		子节点
  获取所有的节点
nodeType		节点类型


nodeType==3	->	文本节点
nodeType==1	->	元素节点

children		只获取元素 不算文本节点

parentNode		父节点（结构上的父级）

offsetParent		定位上的父级

------------------------------------------------------------------------------------------------

首尾节点
有兼容问题
firstChild、firstElementChild
lastChild、lastElementChild

兄弟节点
有兼容问题
nextSibling、nextElementSibling
previousSibling、previousElementSibling

--------------------------------------------------------------------------------------------------------


元素属性操作
第一种：oDiv.style.display='block';
第二种：oDiv.style['display']='block';
第三种：DOM方式

DOM方式操作元素属性
获取：getAttribute(名称)
设置：setAttribute(名称,值)
删除：removeAttribute(名称)

------------------------------------------------------------------------------------------------------------------------------

className选择元素

#######################################################################################################################
第七节：

createElement	创建一个节点

var oLi=document.createElement('li');

oUl.appendChlid(oLi);

父级.appendChlid(子节点)	追加一个节点
父级.insertBefore(子节点,在谁之前)	插入一个节点

父级.removeChild(子节点)	删除一个节点

------------------------------------------------------------------------------------------------------------------------------

文档碎片	createDocumentFragment
提高DOM操作性能

#######################################################################################################################
 第八节：

	(数组)
 tBodies	表格内容
 rows		行
 cells		列

tHead、tFoot	属于元素

------------------------------------------------------------------------------------------------------------------------------

toLowerCase		转换为小写

search	模糊搜索

------------------------------------------------------------------------------------------------------------------------------

父级.appendChlid(子节点) 功能：	1.先把元素从原有的父级上删除 2.添加到新的父级


------------------------------------------------------------------------------------------------------------------------------

表单事件

onsubmit	提交时发生
onreset		重置时发生

表单内容验证

组织用户输入非法字符	阻止事件
输入时、失去焦点时验证	onkeyup、onblur
提交时检查				onsubmit
*后台数据检查


#####################################################################################
第九节 JS运动基础

距左距离				目标位置			速度
left：30		iTarget：500				正
left：600		iTarget：40					负

---------------------------------------------------------------------------------------

Math.ceil()		//向上取整
Math.floor()	//向下取整

#####################################################################################
第十节：JS运动应用

多物体运动框架

所有东西都不能共用
属性与运动对象绑定：速度、其他属性值(如透明度等)


#####################################################################################
第十一节：JS运动中级

回调函数，运动停止时，开始下一次运动

完美运动框架

函数传参
	json的使用
	for in遍历属性


#####################################################################################
第十二节：事件

document的本质  document.childNodes[1].tagName
是所有标签的父级


---------------------------------------------------------------------------------------


点击事件
获取横坐标clientX   获取纵坐标clientY

事件冒泡
取消冒泡：oEvent.cancelBubble=true;


---------------------------------------------------------------------------------------


键盘事件

keyCode


ctrlKey、shiftKey、altKey	三个功能键


---------------------------------------------------------------------------------------
context	环境  (右键菜单)

绑定事件
attachEvent(时间名， 函数)
<<<<<<< HEAD
=======

--------------------------------------------------------------------------------------

css					JS

class		一次给一组元素加样式	原型
行间样式	一次给一个元素加样式	给对象加东西

用构造函数加属性
用原型加方法

--------------------------------------------------------------------------------------



>>>>>>> 更新笔记
